
<template>
  <div class="login-container">
    <div class="login-card">
      <div class="login-header">
        <h1>Welcome to PlayerHub</h1>
        <p>Log in to access your team dashboard</p>
      </div>
      
      <div v-if="error" class="login-error">
        {{ error }}
      </div>
      
      <form class="login-form" @submit.prevent="handleLogin">
        <div class="form-group">
          <label for="email">Email</label>
          <input 
            type="email" 
            id="email" 
            v-model="email" 
            class="form-control" 
            required
          />
        </div>
        
        <div class="form-group">
          <label for="password">Password</label>
          <input 
            type="password" 
            id="password" 
            v-model="password" 
            class="form-control" 
            required
          />
        </div>
        
        <div class="remember-me">
          <label>
            <input type="checkbox" v-model="rememberMe" /> Remember me
          </label>
          <a href="#" class="forgot-password">Forgot password?</a>
        </div>
        
        <button type="submit" class="btn btn-login" :disabled="isLoading">
          {{ isLoading ? 'Logging in...' : 'Log In' }}
        </button>
      </form>
      
      <div class="login-footer">
        <p>Don't have an account? Contact your team administrator.</p>
      </div>
    </div>
  </div>
</template>

<script setup>
import { ref } from 'vue';
import { useRouter } from 'vue-router';

const router = useRouter();
const email = ref('');
const password = ref('');
const rememberMe = ref(false);
const isLoading = ref(false);
const error = ref('');

const handleLogin = async () => {
  isLoading.value = true;
  error.value = '';
  
  try {
    // This is a placeholder for actual authentication logic
    // In a real application, you would call your auth API here
    await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate API call
    
    // Mock login - in a real app, validate credentials with your API
    if (email.value === 'admin@example.com' && password.value === 'password') {
      // Successful login
      localStorage.setItem('user-role', 'admin');
      router.push('/dashboard');
    } else if (email.value === 'player@example.com' && password.value === 'password') {
      // Player login
      localStorage.setItem('user-role', 'player');
      router.push('/dashboard');
    } else {
      // Failed login
      error.value = 'Invalid email or password';
    }
  } catch (err) {
    error.value = 'An error occurred during login. Please try again.';
    console.error(err);
  } finally {
    isLoading.value = false;
  }
};
</script>

<style>
.login-container {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background-image: url('https://images.unsplash.com/photo-1508098682722-e99c643e7f76?ixlib=rb-4.0.3&auto=format&fit=crop&w=1500&q=80');
  background-size: cover;
  background-position: center;
  position: relative;
}

.login-container::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.6);
}

.login-card {
  width: 100%;
  max-width: 450px;
  background-color: white;
  border-radius: 8px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  overflow: hidden;
  position: relative;
  z-index: 1;
}

.login-header {
  padding: 30px;
  background-color: var(--primary-color);
  color: white;
  text-align: center;
}

.login-header h1 {
  margin: 0 0 10px;
  font-size: 24px;
  font-weight: 600;
}

.login-header p {
  margin: 0;
  opacity: 0.9;
}

.login-form {
  padding: 30px;
}

.login-error {
  background-color: #ffebee;
  color: #d32f2f;
  padding: 10px 15px;
  border-radius: 4px;
  margin: 0 30px;
  font-size: 14px;
  font-weight: 500;
}

.remember-me {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 14px;
  margin-bottom: 20px;
}

.forgot-password {
  color: var(--primary-color);
  text-decoration: none;
}

.forgot-password:hover {
  text-decoration: underline;
}

.btn-login {
  width: 100%;
  padding: 12px;
  background-color: var(--primary-color);
  color: white;
  border: none;
  border-radius: 4px;
  font-size: 16px;
  font-weight: 600;
  cursor: pointer;
  transition: background-color 0.3s;
}

.btn-login:hover {
  background-color: var(--primary-dark);
}

.btn-login:disabled {
  background-color: #cccccc;
  cursor: not-allowed;
}

.login-footer {
  padding: 20px 30px;
  text-align: center;
  border-top: 1px solid #eee;
  color: #666;
  font-size: 14px;
}

@media (max-width: 500px) {
  .login-card {
    box-shadow: none;
    border-radius: 0;
    max-width: 100%;
    height: 100vh;
  }
  
  .login-header {
    padding: 20px;
  }
  
  .login-form {
    padding: 20px;
  }
  
  .login-footer {
    padding: 15px 20px;
  }
}
</style>
