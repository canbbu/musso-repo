
<template>
  <div class="dashboard-layout">
    <AppSidebar />
    
    <div class="dashboard-content">
      <header class="dashboard-header">
        <h1>Dashboard</h1>
        <div class="header-actions">
          <button class="btn">New Match</button>
        </div>
      </header>
      
      <div class="dashboard-grid">
        <div class="dashboard-card upcoming-matches">
          <h2>Upcoming Matches</h2>
          <div v-if="upcomingMatches.length">
            <div v-for="match in upcomingMatches" :key="match.id" class="match-item">
              <div class="match-date">{{ formatDate(match.date) }}</div>
              <div class="match-details">
                <span class="match-vs">{{ match.homeTeam }} vs {{ match.awayTeam }}</span>
                <span class="match-location">{{ match.location }}</span>
              </div>
              <button class="btn btn-small">View</button>
            </div>
          </div>
          <p v-else class="no-data">No upcoming matches scheduled.</p>
        </div>
        
        <div class="dashboard-card player-stats">
          <h2>Your Statistics</h2>
          <div class="stats-grid">
            <div class="stat-item">
              <div class="stat-value">{{ playerStats.matches }}</div>
              <div class="stat-label">Matches</div>
            </div>
            <div class="stat-item">
              <div class="stat-value">{{ playerStats.goals }}</div>
              <div class="stat-label">Goals</div>
            </div>
            <div class="stat-item">
              <div class="stat-value">{{ playerStats.assists }}</div>
              <div class="stat-label">Assists</div>
            </div>
            <div class="stat-item">
              <div class="stat-value">{{ playerStats.attendance }}%</div>
              <div class="stat-label">Attendance</div>
            </div>
          </div>
        </div>
        
        <div class="dashboard-card recent-activity">
          <h2>Recent Activity</h2>
          <div class="activity-list">
            <div v-for="(activity, index) in recentActivity" :key="index" class="activity-item">
              <div class="activity-icon">{{ activity.icon }}</div>
              <div class="activity-content">
                <div class="activity-text">{{ activity.text }}</div>
                <div class="activity-time">{{ activity.time }}</div>
              </div>
            </div>
          </div>
        </div>
        
        <div class="dashboard-card announcements">
          <h2>Announcements</h2>
          <div v-if="announcements.length">
            <div v-for="(announcement, index) in announcements" :key="index" class="announcement-item">
              <h3>{{ announcement.title }}</h3>
              <p>{{ announcement.content }}</p>
              <div class="announcement-meta">Posted by {{ announcement.author }} on {{ formatDate(announcement.date) }}</div>
            </div>
          </div>
          <p v-else class="no-data">No announcements at this time.</p>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup>
import { ref } from 'vue';
import AppSidebar from '~/components/AppSidebar.vue';

// Mock data
const upcomingMatches = ref([
  { 
    id: 1, 
    date: new Date(2023, 5, 15, 14, 0), 
    homeTeam: 'Our Team', 
    awayTeam: 'Rivals FC', 
    location: 'Home Field' 
  },
  { 
    id: 2, 
    date: new Date(2023, 5, 22, 16, 30), 
    homeTeam: 'Away Team', 
    awayTeam: 'Our Team', 
    location: 'Away Field' 
  }
]);

const playerStats = ref({
  matches: 12,
  goals: 5,
  assists: 3,
  attendance: 87
});

const recentActivity = ref([
  { 
    icon: '⚽', 
    text: 'New match scheduled against Rivals FC', 
    time: '2 hours ago' 
  },
  { 
    icon: '📊', 
    text: 'John D. updated the match results', 
    time: '1 day ago' 
  },
  { 
    icon: '🏆', 
    text: 'You were voted MVP for the last match!', 
    time: '3 days ago' 
  },
  { 
    icon: '💬', 
    text: 'Coach posted new tactical instructions', 
    time: '5 days ago' 
  }
]);

const announcements = ref([
  {
    title: 'Season Schedule Released',
    content: 'The schedule for the upcoming season has been finalized. Please check your availability for all match dates.',
    author: 'Coach',
    date: new Date(2023, 4, 10)
  },
  {
    title: 'New Training Sessions',
    content: 'Starting next week, we will have additional training sessions on Wednesday evenings.',
    author: 'Team Manager',
    date: new Date(2023, 4, 5)
  }
]);

// Format date for display
const formatDate = (date) => {
  const options = { weekday: 'short', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit' };
  return new Date(date).toLocaleDateString('en-US', options);
};
</script>

<style>
.dashboard-layout {
  display: flex;
  min-height: 100vh;
}

.dashboard-content {
  flex: 1;
  margin-left: 250px;
  padding: 20px;
}

.dashboard-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
}

.dashboard-header h1 {
  margin: 0;
  font-size: 1.8rem;
  color: var(--text-color);
}

.dashboard-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 20px;
}

.dashboard-card {
  background-color: white;
  border-radius: 8px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
  padding: 20px;
}

.dashboard-card h2 {
  margin-top: 0;
  margin-bottom: 15px;
  font-size: 1.2rem;
  color: var(--text-color);
}

.match-item {
  display: flex;
  align-items: center;
  padding: 12px 0;
  border-bottom: 1px solid #eee;
}

.match-item:last-child {
  border-bottom: none;
}

.match-date {
  font-size: 0.9rem;
  font-weight: 500;
  width: 100px;
}

.match-details {
  flex: 1;
}

.match-vs {
  display: block;
  font-weight: 500;
}

.match-location {
  display: block;
  font-size: 0.8rem;
  color: #666;
}

.btn-small {
  padding: 6px 12px;
  font-size: 0.8rem;
}

.stats-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 15px;
}

.stat-item {
  text-align: center;
  background-color: #f5f7fa;
  padding: 15px;
  border-radius: 8px;
}

.stat-value {
  font-size: 1.5rem;
  font-weight: 600;
  color: var(--primary-color);
}

.stat-label {
  font-size: 0.9rem;
  color: #666;
}

.activity-list {
  max-height: 300px;
  overflow-y: auto;
}

.activity-item {
  display: flex;
  align-items: center;
  padding: 10px 0;
  border-bottom: 1px solid #eee;
}

.activity-item:last-child {
  border-bottom: none;
}

.activity-icon {
  width: 30px;
  height: 30px;
  background-color: #f5f7fa;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-right: 10px;
}

.activity-content {
  flex: 1;
}

.activity-text {
  font-size: 0.9rem;
}

.activity-time {
  font-size: 0.8rem;
  color: #999;
}

.announcement-item {
  margin-bottom: 15px;
  padding-bottom: 15px;
  border-bottom: 1px solid #eee;
}

.announcement-item:last-child {
  margin-bottom: 0;
  padding-bottom: 0;
  border-bottom: none;
}

.announcement-item h3 {
  margin: 0 0 10px;
  font-size: 1rem;
}

.announcement-item p {
  margin: 0 0 10px;
  font-size: 0.9rem;
  line-height: 1.5;
}

.announcement-meta {
  font-size: 0.8rem;
  color: #999;
}

.no-data {
  color: #999;
  font-style: italic;
  text-align: center;
}

@media (max-width: 768px) {
  .dashboard-content {
    margin-left: 70px;
  }
}

@media (max-width: 480px) {
  .dashboard-grid {
    grid-template-columns: 1fr;
  }
  
  .stats-grid {
    grid-template-columns: repeat(2, 1fr);
  }
}
</style>
